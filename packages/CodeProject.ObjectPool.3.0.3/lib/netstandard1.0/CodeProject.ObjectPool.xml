<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeProject.ObjectPool</name>
    </assembly>
    <members>
        <member name="T:CodeProject.ObjectPool.Core.CannotResetStateException">
            <summary>
              This exception can be used to signal that the object whose state is being reset cannot be
              added back to the pool for some reason.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.CannotResetStateException.#ctor(System.String)">
            <summary>
              Builds the exception using given message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.ErrorMessages">
            <summary>
              Static class containing all error messages used by ObjectPool.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.IObjectPoolHandle">
            <summary>
              Exposes a way to return objects to the pool.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics">
            <summary>
              A simple class to track stats during execution. By default, this class does not record
              anything, since its <see cref="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled"/> property is set to <c>false</c>.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.#ctor">
            <summary>
              Creates a new diagnostics object, ready to record Object Pool main events.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled">
            <summary>
              Gets or sets whether this object can record data about how the Pool operates.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.TotalLiveInstancesCount">
            <summary>
              Gets the total count of live instances, both in the pool and in use.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.ObjectResetFailedCount">
            <summary>
              Gets the count of object reset failures occured while the pool tried to re-add the
              object into the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.ReturnedToPoolByResurrectionCount">
            <summary>
              Gets the total count of object that has been picked up by the GC, and returned to pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.PoolObjectHitCount">
            <summary>
              Gets the total count of successful accesses. The pool had a spare object to provide to
              the user without creating it on demand.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.PoolObjectMissCount">
            <summary>
              Gets the total count of unsuccessful accesses. The pool had to create an object in
              order to satisfy the user request.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.TotalInstancesCreated">
            <summary>
              Gets the total number of pooled objected created.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.TotalInstancesDestroyed">
            <summary>
              Gets the total number of objects destroyes, both in case of an pool overflow, and state corruption.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.PoolOverflowCount">
            <summary>
              Gets the number of objects been destroyed because the pool was full at the time of
              returning the object to the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.ReturnedToPoolCount">
            <summary>
              Gets the total count of objects that been successfully returned to the pool.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementObjectsCreatedCount">
            <summary>
              Increments the objects created count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementObjectsDestroyedCount">
            <summary>
              Increments the objects destroyed count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementPoolObjectHitCount">
            <summary>
              Increments the pool object hit count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementPoolObjectMissCount">
            <summary>
              Increments the pool object miss count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementPoolOverflowCount">
            <summary>
              Increments the pool overflow count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementResetStateFailedCount">
            <summary>
              Increments the reset state failed count.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementObjectResurrectionCount">
            <summary>
              Increments the count of objects returned to pool by resurrection.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.IncrementReturnedToPoolCount">
            <summary>
              Increments the returned to pool count.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.PooledObjectBuffer`1">
            <summary>
              A buffer into which pooled objects are stored. This buffer mostly behaves like a queue,
              even if that behaviour is not stricly respected in order to maximize performance.
            </summary>
            <typeparam name="T">
              The type of the object that which will be managed by the pool. The pooled object have to be
              a sub-class of PooledObject.
            </typeparam>
        </member>
        <member name="F:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.NoObjects">
            <summary>
              Used as default value for <see cref="F:CodeProject.ObjectPool.Core.PooledObjectBuffer`1._pooledObjects"/>.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Core.PooledObjectBuffer`1._pooledObjects">
            <summary>
              The concurrent buffer containing pooled objects.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.Capacity">
            <summary>
              The maximum capacity of this buffer.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.Count">
            <summary>
              The number of objects stored in this buffer.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.GetEnumerator">
            <summary>
              Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
              Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
              An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.TryDequeue(`0@)">
            <summary>
              Tries to dequeue an object from the buffer.
            </summary>
            <param name="pooledObject">Output pooled object.</param>
            <returns>True if <paramref name="pooledObject"/> has a value, false otherwise.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.TryEnqueue(`0)">
            <summary>
              Tries to enqueue given object into the buffer.
            </summary>
            <param name="pooledObject">Input pooled object.</param>
            <returns>True if there was enough space to enqueue given object, false otherwise.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.Resize(System.Int32)">
            <summary>
              Resizes the buffer so that it fits to given capacity. If new capacity is smaller than
              current capacity, then exceeding items are returned.
            </summary>
            <param name="newCapacity">The new capacity of this buffer.</param>
            <returns>All exceeding items.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Core.PooledObjectBuffer`1.TryRemove(`0)">
            <summary>
              Tries to remove given object from the buffer.
            </summary>
            <param name="pooledObject">Pooled object to be removed.</param>
            <returns>True if <paramref name="pooledObject"/> has been removed, false otherwise.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.PooledObjectInfo">
            <summary>
              Core information about a specific <see cref="T:CodeProject.ObjectPool.PooledObject"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectInfo.Id">
            <summary>
              An identifier which is unique inside the pool to which this object belongs. Moreover,
              this identifier increases monotonically as new objects are created.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectInfo.Payload">
            <summary>
              Payload which can be used to add custom information to a pooled object.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectInfo.State">
            <summary>
              Enumeration that is being managed by the pool to describe the object state - primary
              used to void cases where the resources are being releases twice.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Core.PooledObjectInfo.Handle">
            <summary>
              Internal action that is initialized by the pool while creating the object, this allows
              that object to re-add itself back to the pool.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Core.PooledObjectState">
            <summary>
              Describes the state of a pooled object.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Core.PooledObjectState.Available">
            <summary>
              The object is inside the pool, waiting to be used.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Core.PooledObjectState.Reserved">
            <summary>
              The object is outside the pool, waiting to return to the pool.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Core.PooledObjectState.Disposed">
            <summary>
              The object has been disposed and cannot be used anymore.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.IObjectPool`1">
            <summary>
              Describes all methods available on Object Pools.
            </summary>
            <typeparam name="T">The type of the objects stored in the pool.</typeparam>
        </member>
        <member name="P:CodeProject.ObjectPool.IObjectPool`1.Diagnostics">
            <summary>
              Gets or sets the Diagnostics class for the current Object Pool, whose goal is to record
              data about how the pool operates. By default, however, an object pool records anything,
              in order to be most efficient; in any case, you can enable it through the
              <see cref="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled"/> property.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IObjectPool`1.FactoryMethod">
            <summary>
              Gets the Factory method that will be used for creating new objects.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IObjectPool`1.MaximumPoolSize">
            <summary>
              Gets or sets the maximum number of objects that could be available at the same time in
              the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IObjectPool`1.ObjectsInPoolCount">
            <summary>
              Gets the count of the objects currently in the pool.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.IObjectPool`1.Clear">
            <summary>
              Clears the pool and destroys each object stored inside it.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.IObjectPool`1.GetObject">
            <summary>
              Gets a monitored object from the pool.
            </summary>
            <returns>A monitored object from the pool.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.IParameterizedObjectPool`2">
            <summary>
              A parameterized version of the ObjectPool interface.
            </summary>
            <typeparam name="TKey">The type of the pool parameter.</typeparam>
            <typeparam name="TValue">The type of the objects stored in the pool.</typeparam>
        </member>
        <member name="P:CodeProject.ObjectPool.IParameterizedObjectPool`2.Diagnostics">
            <summary>
              Gets or sets the Diagnostics class for the current Object Pool, whose goal is to record
              data about how the pool operates. By default, however, an object pool records anything,
              in order to be most efficient; in any case, you can enable it through the
              <see cref="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled"/> property.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IParameterizedObjectPool`2.FactoryMethod">
            <summary>
              Gets the Factory method that will be used for creating new objects.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IParameterizedObjectPool`2.MaximumPoolSize">
            <summary>
              Gets or sets the maximum number of objects that could be available at the same time in
              the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.IParameterizedObjectPool`2.KeysInPoolCount">
            <summary>
              Gets the count of the keys currently handled by the pool.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.IParameterizedObjectPool`2.GetObject(`0)">
            <summary>
              Gets an object linked to given key.
            </summary>
            <param name="key">The key linked to the object.</param>
            <returns>The objects linked to given key.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.ITimedObjectPool`1">
            <summary>
              A pool where objects are automatically removed after a period of inactivity.
            </summary>
            <typeparam name="T">
              The type of the object that which will be managed by the pool. The pooled object have to be
              a sub-class of PooledObject.
            </typeparam>
        </member>
        <member name="P:CodeProject.ObjectPool.ITimedObjectPool`1.Timeout">
            <summary>
              When pooled objects have not been used for a time greater than <see cref="P:CodeProject.ObjectPool.ITimedObjectPool`1.Timeout"/>,
              then they will be destroyed by a cleaning task.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.ObjectPool">
            <summary>
              Constants for all Object Pools.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.ObjectPool.DefaultPoolMaximumSize">
            <summary>
              The default maximum size for the pool. It is set to 16.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.ObjectPool`1">
            <summary>
              Generic object pool.
            </summary>
            <typeparam name="T">
              The type of the object that which will be managed by the pool. The pooled object have to be
              a sub-class of PooledObject.
            </typeparam>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.#ctor">
            <summary>
              Initializes a new pool with default settings.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.#ctor(System.Int32)">
            <summary>
              Initializes a new pool with specified maximum pool size.
            </summary>
            <param name="maximumPoolSize">The maximum pool size limit.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="maximumPoolSize"/> is less than or equal to zero.
            </exception>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.#ctor(System.Func{`0})">
            <summary>
              Initializes a new pool with specified factory method.
            </summary>
            <param name="factoryMethod">The factory method that will be used to create new objects.</param>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.#ctor(System.Int32,System.Func{`0})">
            <summary>
              Initializes a new pool with specified factory method and maximum size.
            </summary>
            <param name="maximumPoolSize">The maximum pool size limit.</param>
            <param name="factoryMethod">The factory method that will be used to create new objects.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
              <paramref name="maximumPoolSize"/> is less than or equal to zero.
            </exception>
        </member>
        <member name="P:CodeProject.ObjectPool.ObjectPool`1.Diagnostics">
            <summary>
              Gets the Diagnostics class for the current Object Pool, whose goal is to record data
              about how the pool operates. By default, however, an object pool records anything; you
              have to enable it through the <see cref="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled"/> property.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ObjectPool`1.FactoryMethod">
            <summary>
              Gets the Factory method that will be used for creating new objects.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ObjectPool`1.MaximumPoolSize">
            <summary>
              Gets or sets the maximum number of objects that could be available at the same time in
              the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ObjectPool`1.ObjectsInPoolCount">
            <summary>
              Gets the count of the objects currently in the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ObjectPool`1.PooledObjects">
            <summary>
              The concurrent buffer containing pooled objects.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.Finalize">
            <summary>
              ObjectPool destructor.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.Clear">
            <summary>
              Clears the pool and destroys each object stored inside it.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.GetObject">
            <summary>
              Gets a monitored object from the pool.
            </summary>
            <returns>A monitored object from the pool.</returns>
        </member>
        <member name="F:CodeProject.ObjectPool.ObjectPool`1._lastPooledObjectId">
            <summary>
              Keeps track of last pooled object ID.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.CreatePooledObject">
            <summary>
              Creates a new pooled object, initializing its info.
            </summary>
            <returns>A new pooled object.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.ObjectPool`1.DestroyPooledObject(CodeProject.ObjectPool.PooledObject)">
            <summary>
              Destroys given pooled object, disposing its resources.
            </summary>
            <param name="objectToDestroy">The pooled object that should be destroyed.</param>
        </member>
        <member name="T:CodeProject.ObjectPool.ParameterizedObjectPool`2">
            <summary>
              A parameterized version of the ObjectPool class.
            </summary>
            <typeparam name="TKey">The type of the pool parameter.</typeparam>
            <typeparam name="TValue">The type of the objects stored in the pool.</typeparam>
        </member>
        <member name="F:CodeProject.ObjectPool.ParameterizedObjectPool`2._diagnostics">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.Diagnostics"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.Diagnostics">
            <summary>
              Gets or sets the Diagnostics class for the current Object Pool, whose goal is to record
              data about how the pool operates. By default, however, an object pool records anything,
              in order to be most efficient; in any case, you can enable it through the
              <see cref="P:CodeProject.ObjectPool.Core.ObjectPoolDiagnostics.Enabled"/> property.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.ParameterizedObjectPool`2._maximumPoolSize">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.MaximumPoolSize"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.MaximumPoolSize">
            <summary>
              Gets or sets the maximum number of objects that could be available at the same time in
              the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.FactoryMethod">
            <summary>
              Gets the Factory method that will be used for creating new objects.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.ParameterizedObjectPool`2.KeysInPoolCount">
            <summary>
              Gets the count of the keys currently handled by the pool.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.#ctor">
            <summary>
              Initializes a new pool with default settings.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.#ctor(System.Int32)">
            <summary>
              Initializes a new pool with specified maximum pool size.
            </summary>
            <param name="maximumPoolSize">The maximum pool size limit.</param>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.#ctor(System.Func{`0,`1})">
            <summary>
              Initializes a new pool with specified factory method.
            </summary>
            <param name="factoryMethod">The factory method that will be used to create new objects.</param>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.#ctor(System.Int32,System.Func{`0,`1})">
            <summary>
              Initializes a new pool with specified factory method and maximum size.
            </summary>
            <param name="maximumPoolSize">The maximum pool size limit.</param>
            <param name="factoryMethod">The factory method that will be used to create new objects.</param>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.Clear">
            <summary>
              Clears the parameterized pool and each inner pool stored inside it.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.ParameterizedObjectPool`2.GetObject(`0)">
            <summary>
              Gets an object linked to given key.
            </summary>
            <param name="key">The key linked to the object.</param>
            <returns>The objects linked to given key.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.PooledObject">
            <summary>
              PooledObject base class.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObject.PooledObjectInfo">
            <summary>
              Core information about this <see cref="T:CodeProject.ObjectPool.PooledObject"/>.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.ReleaseResources">
            <summary>
              Releases the object resources. This method will be called by the pool manager when
              there is no need for this object anymore (decreasing pooled objects count, pool is
              being destroyed).
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.ResetState">
            <summary>
              Reset the object state. This method will be called by the pool manager just before the
              object is being returned to the pool.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObject.OnResetState">
            <summary>
              Reset the object state to allow this object to be re-used by other parts of the application.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObject.OnReleaseResources">
            <summary>
              Releases the object's resources.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.Dispose">
            <summary>
              See <see cref="T:System.IDisposable"/> docs.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.Finalize">
            <summary>
              PooledObject destructor.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.GetFormattingMembers">
            <summary>
              Returns all property (or field) values, along with their names, so that they can be
              used to produce a meaningful <see cref="M:System.Object.ToString"/>.
            </summary>
            <returns>
              All property (or field) values, along with their names, so that they can be used to
              produce a meaningful <see cref="M:System.Object.ToString"/>.
            </returns>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObject.GetIdentifyingMembers">
            <summary>
              Returns all property (or field) values that should be used inside
              <see cref="M:System.IEquatable`1.Equals(`0)"/> or <see cref="M:System.Object.GetHashCode"/>.
            </summary>
            <returns>
              All property (or field) values that should be used inside
              <see cref="M:System.IEquatable`1.Equals(`0)"/> or <see cref="M:System.Object.GetHashCode"/>.
            </returns>
        </member>
        <member name="T:CodeProject.ObjectPool.PooledObjectWrapper`1">
            <summary>
              PooledObject wrapper, for classes which cannot inherit from that class.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.PooledObjectWrapper`1.#ctor(`0)">
            <summary>
              Wraps a given resource so that it can be put in the pool.
            </summary>
            <param name="resource">The resource to be wrapped.</param>
            <exception cref="T:System.ArgumentNullException">Given resource is null.</exception>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObjectWrapper`1.InternalResource">
            <summary>
              The resource wrapped inside this class.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObjectWrapper`1.OnReleaseResources">
            <summary>
              Triggered by the pool manager when there is no need for this object anymore.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.PooledObjectWrapper`1.OnResetState">
            <summary>
              Triggered by the pool manager just before the object is being returned to the pool.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.IMemoryStreamPool">
            <summary>
              An object pool specialized in <see cref="T:System.IO.MemoryStream"/> management.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.IMemoryStreamPool.MinimumMemoryStreamCapacity">
            <summary>
              Minimum capacity a <see cref="T:System.IO.MemoryStream"/> should have when created and this is the
              minimum capacity of all streams stored in the pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMinimumMemoryStreamCapacity"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.IMemoryStreamPool.MaximumMemoryStreamCapacity">
            <summary>
              Maximum capacity a <see cref="T:System.IO.MemoryStream"/> might have in order to be able to return
              to pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMaximumMemoryStreamCapacity"/>.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.IStringBuilderPool">
            <summary>
              An object pool specialized in <see cref="T:System.Text.StringBuilder"/> management.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.IStringBuilderPool.MinimumStringBuilderCapacity">
            <summary>
              Minimum capacity a <see cref="T:System.Text.StringBuilder"/> should have when created and this is the
              minimum capacity of all builders stored in the pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMinimumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.IStringBuilderPool.MaximumStringBuilderCapacity">
            <summary>
              Maximum capacity a <see cref="T:System.Text.StringBuilder"/> might have in order to be able to return
              to pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMaximumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.IStringBuilderPool.GetObject(System.String)">
            <summary>
              Returns a pooled string builder using given string as initial value.
            </summary>
            <param name="value">The string used to initialize the value of the instance.</param>
            <returns>A pooled string builder.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.MemoryStreamPool">
            <summary>
              An <see cref="T:CodeProject.ObjectPool.IObjectPool`1"/> ready to be used.
              <see cref="T:System.IO.MemoryStream"/> management can be further configured using the
              <see cref="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MinimumMemoryStreamCapacity"/> and <see cref="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MaximumMemoryStreamCapacity"/> properties.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMinimumMemoryStreamCapacity">
            <summary>
              Default minimum memory stream capacity. Shared by all <see cref="T:CodeProject.ObjectPool.Specialized.IMemoryStreamPool"/>
              instances, defaults to 4KB.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMaximumMemoryStreamCapacity">
            <summary>
              Default maximum memory stream capacity. Shared by all <see cref="T:CodeProject.ObjectPool.Specialized.IMemoryStreamPool"/>
              instances, defaults to 512KB.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.Instance">
            <summary>
              Thread-safe pool instance.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.MemoryStreamPool.#ctor">
            <summary>
              Builds the specialized pool.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool._minimumItemCapacity">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MinimumMemoryStreamCapacity"/>
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MinimumMemoryStreamCapacity">
            <summary>
              Minimum capacity a <see cref="T:System.IO.MemoryStream"/> should have when created and this is the
              minimum capacity of all streams stored in the pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMinimumMemoryStreamCapacity"/>.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool._maximumItemCapacity">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MaximumMemoryStreamCapacity"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.MemoryStreamPool.MaximumMemoryStreamCapacity">
            <summary>
              Maximum capacity a <see cref="T:System.IO.MemoryStream"/> might have in order to be able to return
              to pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.MemoryStreamPool.DefaultMaximumMemoryStreamCapacity"/>.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.PooledMemoryStream">
            <summary>
              Pooled object prepared to work with <see cref="T:System.IO.MemoryStream"/> instances.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.PooledMemoryStream._trackedMemoryStream">
            <summary>
              The tracked memory stream.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.PooledMemoryStream.#ctor(System.Int32)">
            <summary>
              Builds a pooled memory stream.
            </summary>
            <param name="capacity">The capacity of the backing stream.</param>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.PooledMemoryStream.MemoryStream">
            <summary>
              The memory stream.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.PooledMemoryStream.ToString">
            <summary>
              Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.PooledStringBuilder">
            <summary>
              Pooled object prepared to work with <see cref="P:CodeProject.ObjectPool.Specialized.PooledStringBuilder.StringBuilder"/> instances.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.PooledStringBuilder.StringBuilder">
            <summary>
              The string builder.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.PooledStringBuilder.#ctor(System.Int32)">
            <summary>
              Builds a pooled string builder.
            </summary>
            <param name="capacity">The capacity of the string builder.</param>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.PooledStringBuilder.ToString">
            <summary>
              Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.PooledStringBuilder.ClearStringBuilder">
            <summary>
              Clears the <see cref="P:CodeProject.ObjectPool.Specialized.PooledStringBuilder.StringBuilder"/> property, using specific methods depending on
              the framework for which ObjectPool has been compiled.
            </summary>
        </member>
        <member name="T:CodeProject.ObjectPool.Specialized.StringBuilderPool">
            <summary>
              An <see cref="T:CodeProject.ObjectPool.IObjectPool`1"/> ready to be used.
              <see cref="T:System.Text.StringBuilder"/> management can be further configured using the
              <see cref="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MinimumStringBuilderCapacity"/> and <see cref="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MaximumStringBuilderCapacity"/> properties.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMinimumStringBuilderCapacity">
            <summary>
              Default minimum string builder capacity. Shared by all <see cref="T:CodeProject.ObjectPool.Specialized.IStringBuilderPool"/>
              instances, defaults to 4096 characters.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMaximumStringBuilderCapacity">
            <summary>
              Default maximum string builder capacity. Shared by all <see cref="T:CodeProject.ObjectPool.Specialized.IStringBuilderPool"/>
              instances, defaults to 524288 characters.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.Instance">
            <summary>
              Thread-safe pool instance.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.StringBuilderPool.#ctor">
            <summary>
              Builds the specialized pool.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.StringBuilderPool._minimumItemCapacity">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MinimumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MinimumStringBuilderCapacity">
            <summary>
              Minimum capacity a <see cref="T:System.Text.StringBuilder"/> should have when created and this is the
              minimum capacity of all builders stored in the pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMinimumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="F:CodeProject.ObjectPool.Specialized.StringBuilderPool._maximumItemCapacity">
            <summary>
              Backing field for <see cref="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MaximumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="P:CodeProject.ObjectPool.Specialized.StringBuilderPool.MaximumStringBuilderCapacity">
            <summary>
              Maximum capacity a <see cref="T:System.Text.StringBuilder"/> might have in order to be able to return
              to pool. Defaults to <see cref="F:CodeProject.ObjectPool.Specialized.StringBuilderPool.DefaultMaximumStringBuilderCapacity"/>.
            </summary>
        </member>
        <member name="M:CodeProject.ObjectPool.Specialized.StringBuilderPool.GetObject(System.String)">
            <summary>
              Returns a pooled string builder using given string as initial value.
            </summary>
            <param name="value">The string used to initialize the value of the instance.</param>
            <returns>A pooled string builder.</returns>
        </member>
    </members>
</doc>
